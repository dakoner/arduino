

void setup()
{
    Serial.begin(9600);
    
  // //Setup Channel A
  // pinMode(12, OUTPUT); //Initiates Motor Channel A pin
  // pinMode(9, OUTPUT); //Initiates Brake Channel A pin

  // //Setup Channel B
  // pinMode(13, OUTPUT); //Initiates Motor Channel B pin
  // pinMode(8, OUTPUT);  //Initiates Brake Channel B pin
  
}

String inputString = "";         // a string to hold incoming data
boolean stringComplete = false;  // whether the string is complete

void loop()
{
 // print the string when a newline arrives:
  if (stringComplete) {
    // clear the string:
    Serial.print("Got: ");
    Serial.println(inputString);
    inputString = "";
    stringComplete = false;

        // digitalWrite(12, LOW); //Establishes backward direction of Channel A
        // digitalWrite(9, LOW);   //Disengage the Brake for Channel A
        // analogWrite(3, 255);   //Spins the motor on Channel A at full speed

        // digitalWrite(13, LOW);  //Establishes backward direction of Channel B
        // digitalWrite(8, LOW);   //Disengage the Brake for Channel B
        // analogWrite(11, 255);    //Spins the motor on Channel B at half speed
}
}

/*
  SerialEvent occurs whenever a new data comes in the
 hardware serial RX.  This routine is run between each
 time loop() runs, so using delay inside loop can delay
 response.  Multiple bytes of data may be available.
 */
void serialEvent() {
  while (Serial.available()) {
    // get the new byte:
    char inChar = (char)Serial.read(); 
    // add it to the inputString:
    inputString += inChar;
    // if the incoming character is a newline, set a flag
    // so the main loop can do something about it:
    if (inChar == '\n') {
      stringComplete = true;
    } 
  }
}
